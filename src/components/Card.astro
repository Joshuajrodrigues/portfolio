---
let { text, defaultColor, flip = false } = Astro.props;
---

<script>
const colors = [
  "bg-pink-400",
  "bg-teal-400",
  "bg-orange-400",
  "bg-blue-400",
  "bg-purple-400",
];

  const cards = document.querySelectorAll("p");
  cards.forEach((card) => {
    card.addEventListener("click", () => {
      let currentColor = card.classList.value.split(" ").at(-1);
      let filteredColors = colors.filter((color) => color !== currentColor);
      //   console.log("currentColor",currentColor);
      let newColor =
        filteredColors[
          Math.floor(Math.floor(Math.random() * filteredColors.length))
        ];
      //   console.log("newColor",newColor);
      console.log("currentColor",currentColor);
      card.classList.replace(currentColor!, newColor);
      //  console.log("cliecked",card.classList);
    });
  });
</script>
<p
  id="about-card"
  class={`m-5 p-5 lg:w-1/2 font-semibold font-publicSans border-black border-2 neo-brutal-shadow
 ${
    flip ? "-rotate-2" : "rotate-2"
  } transform -translate-x-1/2 -translate-y-1/2 transform-growth  ${defaultColor}`}
>
  {text}
</p>
<style>
  .transform-growth {
transform: scale(1);
transition: transform 0.3s ease;
}

/* Apply the hover effect */
.transform-growth:hover {
transform: scale(1.1) rotate(5deg);
}

/* Apply the click effect */
.transform-growth:active {
transform: scale(1.1) rotate(5deg);
}
</style>