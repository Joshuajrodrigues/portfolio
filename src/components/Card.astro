---
let { text, defaultColor, flip = false } = Astro.props;
---

<script>
const colors = [
  "bg-pink-400",
  "bg-teal-400",
  "bg-orange-400",
  "bg-blue-400",
  "bg-purple-400",
];

  const cards = document.querySelectorAll<HTMLParagraphElement>(".chamaleon");


  cards.forEach((card) => {

    card.addEventListener("click", () => {
      changeColors(card)
    });
    card.addEventListener("touchstart", () => {
      changeColors(card)
    });
  });

  const changeColors=(card:HTMLParagraphElement)=>{
    let currentColor = card.classList.value.split(" ").at(-1);
      let filteredColors = colors.filter((color) => color !== currentColor);
      //   console.log("currentColor",currentColor);
      let newColor =
        filteredColors[
          Math.floor(Math.floor(Math.random() * filteredColors.length))
        ];
      //   console.log("newColor",newColor);
      console.log("currentColor",currentColor);
      card.classList.replace(currentColor!, newColor);
      //  console.log("cliecked",card.classList);
  }
</script>
<p
  id="about-card"
  class={`m-5 chamaleon p-5 cursor-pointer lg:w-1/2 font-semibold font-publicSans border-black border-2 neo-brutal-shadow
  transform -translate-x-1/2 -translate-y-1/2 ${
    flip ? "transform-growth-minus" : "transform-growth-plus"
  }  ${defaultColor}`}
>
  {text}
</p>
<style>
  .transform-growth-plus {
transform: scale(1) rotate(3deg);
transition: transform 0.3s ease;
}

/* Apply the hover effect */
.transform-growth-plus:hover {
transform: scale(1.1) rotate(0);
}

/* Apply the click effect */
.transform-growth-plus:active {
transform: scale(1.1) rotate(3deg);
}

.transform-growth-minus {
transform: scale(1) rotate(-3deg);
transition: transform 0.3s ease;
}

/* Apply the hover effect */
.transform-growth-minus:hover {
transform: scale(1.1) rotate(0);
}

/* Apply the click effect */
.transform-growth-minus:active {
transform: scale(1.1) rotate(-3deg);
}
</style>